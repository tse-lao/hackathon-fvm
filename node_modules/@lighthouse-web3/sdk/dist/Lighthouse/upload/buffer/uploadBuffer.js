"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
const lighthouse_config_1 = require("../../../lighthouse.config");
exports.default = async (buffer, apiKey, mimeType = '') => {
    try {
        const FormData = eval(`require`)('form-data');
        const token = 'Bearer ' + apiKey;
        const endpoint = lighthouse_config_1.lighthouseConfig.lighthouseNode + '/api/v0/add';
        // Upload file
        const formData = new FormData();
        formData.append('file', buffer);
        const response = await axios_1.default.post(endpoint, formData, {
            withCredentials: true,
            maxContentLength: Infinity,
            maxBodyLength: Infinity,
            headers: {
                'Content-type': `multipart/form-data; boundary= ${formData.getBoundary()}`,
                Encryption: 'false',
                'Mime-Type': mimeType,
                Authorization: token,
            },
        });
        return { data: response.data };
    }
    catch (error) {
        throw new Error(error?.message);
    }
};
